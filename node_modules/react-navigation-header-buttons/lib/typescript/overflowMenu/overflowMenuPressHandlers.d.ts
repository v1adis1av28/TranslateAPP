import type * as React from 'react';
import { View } from 'react-native';
import { HiddenItemProps } from '../HeaderItems';
import { OverflowMenuContextType } from './OverflowMenuContext';
import { type PropsExtractor } from 'react-to-imperative';
type OverflowButtonDescriptors = ReadonlyArray<{
    title: string;
    onPress?: HiddenItemProps['onPress'];
    destructive?: boolean;
    disabled?: boolean;
}>;
export declare const extractOverflowButtonData: (hiddenButtons: React.ReactNode) => OverflowButtonDescriptors;
export declare const extractHiddenItemProps: PropsExtractor<HiddenItemProps>;
export type OnOverflowMenuPressParams = {
    hiddenButtons: OverflowButtonDescriptors;
    overflowButtonRef: null | View;
    cancelButtonLabel?: string;
    children: React.ReactNode;
} & OverflowMenuContextType;
export declare const overflowMenuPressHandlerActionSheet: ({ hiddenButtons, cancelButtonLabel, }: OnOverflowMenuPressParams) => void;
export declare const overflowMenuPressHandlerPopupMenu: ({ hiddenButtons, overflowButtonRef, }: OnOverflowMenuPressParams) => void;
export declare const overflowMenuPressHandlerDropdownMenu: ({ children, overflowButtonRef, presentMenu, }: OnOverflowMenuPressParams) => void;
export declare const defaultOnOverflowMenuPress: (params: OnOverflowMenuPressParams) => void;
export {};
//# sourceMappingURL=overflowMenuPressHandlers.d.ts.map