function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from 'react';
import { StyleSheet, View } from 'react-native';
import { useTheme } from '@react-navigation/native';
/**
 * A divider is a thin, lightweight separator that groups content in lists and page layouts.
 *
 * ## Usage
 * ```js
 * import * as React from 'react';
 * import { View } from 'react-native';
 * import { Divider, Text } from 'react-native-paper';
 *
 * const MyComponent = () => (
 *   <View>
 *     <Text>Apple</Text>
 *     <Divider />
 *     <Text>Orange</Text>
 *     <Divider />
 *   </View>
 * );
 *
 * ```
 */
export function Divider(props) {
  const {
    dark
  } = useTheme();
  const {
    inset,
    style,
    ...rest
  } = props;
  const textStyle = dark ? styles.dark : styles.light;
  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {
    style: [textStyle, inset && styles.inset, style]
  }));
}
const styles = StyleSheet.create({
  light: {
    backgroundColor: 'rgba(0, 0, 0, 0.12)',
    height: StyleSheet.hairlineWidth
  },
  dark: {
    backgroundColor: 'rgba(255, 255, 255, 0.12)',
    height: StyleSheet.hairlineWidth
  },
  inset: {
    marginLeft: 72
  }
});
//# sourceMappingURL=Divider.js.map